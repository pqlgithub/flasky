[program:backend]
; Attention! ENV_APP_ROOT mean environment paramter which name is APP_ROOT!
; the program start directory
directory = /opt/project/fxerp
command = /opt/project/fxerp/venv/bin/gunicorn -c deploy/gun.py manage:app
autostart = true     ; set as autostart when start all in superviord
startsecs = 15        ; check program status after 15 seconds if it started
autorestart = true   ; if start failed, restart it auto
startretries = 3     ; restart retry times
redirect_stderr = true
;stdout_logfile_maxbytes = 20MB  ; It is highly recommended to use linux embeded log rotator to do it.
;stdout_logfile_backups = 20     ; It is highly recommended to use linux embeded log rotator to do it.
; for stdout log fileï¼Œneed to make sure its directory exists before running. Otherwise, supervisord cannot start this program.
stdout_logfile = /var/log/fxerp/backend_stdout.log
; highest priority
priority=999


[program:celery]
directory = /opt/project/fxerp
; If more logs needed, you can replace INFO with DEBUG
command = /opt/project/fxerp/venv/bin/celery worker -A celery_runner -l INFO
autostart = true
startsecs = 15
autorestart = true
startretries = 3
redirect_stderr = true
stdout_logfile = /var/log/fxerp/celery_stdout.log
; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600
; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true
priority=900

[program:celery_beat]
directory = /opt/project/fxerp
command = /opt/project/fxerp/venv/bin/celery -A celery_runner beat
autostart = true
startsecs = 15
autorestart = true
startretries = 3
redirect_stderr = true
stdout_logfile = /var/log/fxerp/celery_beat_stdout.log
priority=950
